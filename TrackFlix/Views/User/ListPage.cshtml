@{
    ViewData["Title"] = "List";
    Layout = "_CollectionLayout";
}
@model TrackFlix.Models.UserListViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/css/Stylemylist.css" />
</head>

<body>
    <!-- Navigation Tabs -->
    <div class="mdl-style-nav-desktop" id="navContent">
        <ul class="mdl-style-tabs nav nav-tabs">
            <li class="page-item nav-item active"><a class="nav-link" href="#" onclick="filterByStatus('ALL')">All Movies And Shows</a></li>
            <li class="page-item nav-item"><a class="nav-link" href="#" onclick="filterByStatus('CURRENTLY_WATCHING')">Currently Watching</a></li>
            <li class="page-item nav-item"><a class="nav-link" href="#" onclick="filterByStatus('COMPLETED')">Completed</a></li>
            <li class="page-item nav-item"><a class="nav-link" href="#" onclick="filterByStatus('ON_HOLD')">On Hold</a></li>
            <li class="page-item nav-item"><a class="nav-link" href="#" onclick="filterByStatus('DROPPED')">Dropped</a></li>
            <li class="page-item nav-item"><a class="nav-link" href="#" onclick="filterByStatus('PLAN_TO_WATCH')">Plan to Watch</a></li>
            <li class="page-item nav-item"><a class="nav-link" href="#" onclick="filterByStatus('NOT_INTERESTED')">Not Interested</a></li>
        </ul>
    </div>

    <!-- List Table -->
    <div id="mylist_2" class="mdl-style-list-body section mylist table-responsive">
        <h3 id="tableTitle" class="mdl-style-list-label" style="color:white">All Movies And Shows</h3>

        <table id="list_2" class="mdl-style-table table table-striped m-b-0">
            <thead class="primary">
                <tr>
                    <th width="30" class="mdl-style-thead-Delete text-center hidden-sm-down"></th>
                    <th width="30" class="mdl-style-thead-num text-center hidden-sm-down">#</th>
                    <th width="300" class="mdl-style-thead-title left">Title</th>
                    <th width="110" class="mdl-style-thead-season text-center">Season</th>
                    <th width="85" class="mdl-style-thead-year text-center hidden-sm-down">Release Date</th>
                    <th width="85" class="mdl-style-thead-type text-center hidden-sm-down">Type</th>
                    <th width="110" class="mdl-style-thead-score text-center">Rating</th>
                    <th width="105" class="mdl-style-thead-progress text-center">Progress</th>
                    <th width="110" class="mdl-style-thead-status text-center">Status</th>
                </tr>
            </thead>

            <tbody id="content_2_0">
                @{
                    int index = 1;

                    // Render Shows
                    for (int i = 0; i < Model.Shows.ListData.Count; i++)
                    {
                        var userShow = Model.Shows.ListData[i];
                        var show = Model.Shows.CollectionData.FirstOrDefault(s => s.Id == userShow.ShowId);
                        var season = show?.Seasons.FirstOrDefault(se => se.Id == userShow.SeasonId);
                        if (show != null)
                        {
                            <tr class="@(index % 2 == 0 ? "td2" : "td1")"
                                data-status="@userShow.Status"
                                data-type="show"
                                data-ShowId="@userShow.ShowId"
                                data-SeasonId="@userShow.SeasonId">

                                <td align="center">
                                @if(@Model.IsOwner){
                                    <button class="delete-btn" title="Remove from list">❌</button>
                                }
                                </td>
                                <th align="center">@index</th>
                                <td>
                                    <span class="movie-title">
                                        <a asp-action="GetShowPage" 
                                        asp-controller="Collection" 
                                        asp-route-showId="@show.Id">
                                            @show.Title
                                        </a>
                                    </span>
                                </td>
                                <td align="center">@season.SeasonNumber</td>
                                <td align="center">@show.ReleaseDate</td>
                                <td align="center">TV Show</td>
                                <td align="center"><span class="score">@userShow.Rating</span></td>
                                @if (userShow.EpisodesWatched != season.EpisodesCount && @Model.IsOwner)
                                {
                                    <td align="center">
                                        <a asp-action="UpdateSeasonProgress" asp-controller="User" asp-route-option="decrease" asp-route-showId=@userShow.ShowId asp-route-seasonId=@userShow.SeasonId asp-route-episodesCount=@season.EpisodesCount class="progress-btn">-</a>
                                        @userShow.EpisodesWatched / @season.EpisodesCount
                                        <a asp-action="UpdateSeasonProgress" asp-controller="User" asp-route-option="increase" asp-route-showId=@userShow.ShowId asp-route-seasonId=@userShow.SeasonId asp-route-episodesCount=@season.EpisodesCount class="progress-btn">+</a>
                                    </td>
                                }
                                else
                                {
                                    <td align="center">
                                        @userShow.EpisodesWatched / @season.EpisodesCount
                                    </td>
                                }
                                <td align="center">@userShow.Status</td>
                            </tr>
                            index++;
                        }
                    }

                    // Render Movies
                    for (int i = 0; i < Model.Movies.ListData.Count; i++)
                    {
                        var userMovie = Model.Movies.ListData[i];
                        var movie = Model.Movies.CollectionData.FirstOrDefault(m => m.Id == userMovie.MovieId);
                        if (movie != null)
                        {
                            <tr class="@(index % 2 == 0 ? "td2" : "td1")"
                                data-status="@userMovie.Status"
                                data-Type="movie"
                                data-MovieId="@userMovie.MovieId">
                                <td align="center">
                                    @if (@Model.IsOwner)
                                    {
                                        <button class="delete-btn" title="Remove from list">❌</button>
                                    }
                                </td>
                                <th align="center">@index</th>
                                <td>
                                    <span class="movie-title">
                                        <a asp-action="GetMoviePage"
                                           asp-controller="Collection"
                                           asp-route-movieId="@movie.Id">
                                            @movie.Title
                                        </a>
                                    </span>
                                </td>
                                <td align="center">None</td>
                                <td align="center">@movie.ReleaseDate</td>
                                <td align="center">Movie</td>
                                <td align="center"><span class="score">@userMovie.Rating</span></td>
                                <td align="center">
                                    1 / 1
                                </td>
                                <td align="center">@userMovie.Status</td>

                            </tr>
                            index++;
                        }
                    }
                }
            </tbody>
        </table>
    </div>

    <!-- List Footer -->
    <div class="mdl-style-list-footer box-footer b-t list-statistics">
        <label class="mdl-style-tvshows"><span class="name">TV Shows</span><span class="cnt">@Model.Shows.ListData.Count</span></label>
        <label class="mdl-style-movies"><span class="name">Movies</span><span class="cnt">@Model.Movies.ListData.Count</span></label>
    </div>

    <!-- Filtering Script -->
    <script>
        function filterByStatus(status) {
            const rows = document.querySelectorAll('#content_2_0 tr');

            rows.forEach(row => {
                const rowStatus = row.getAttribute('data-status');
                row.style.display = (status === 'ALL' || rowStatus === status) ? '' : 'none';
            });

            const title = document.getElementById('tableTitle');
            const statusTitleMap = {
                'ALL': 'All Movies And Shows',
                'CURRENTLY_WATCHING': 'Currently Watching',
                'COMPLETED': 'Completed',
                'ON_HOLD': 'On Hold',
                'DROPPED': 'Dropped',
                'PLAN_TO_WATCH': 'Plan to Watch',
                'NOT_INTERESTED': 'Not Interested'
            };

            title.textContent = statusTitleMap[status] || 'My List';
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.delete-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const row = this.closest('tr');
                    const type = row.getAttribute('data-type');

                    let payload = { type: type };

                    if (type === 'show') {
                        payload.showId = parseInt(row.getAttribute('data-ShowID'));
                        payload.seasonId = parseInt(row.getAttribute('data-SeasonId'));
                    } else if (type === 'movie') {
                        payload.movieId = parseInt(row.getAttribute('data-MovieId'));
                    }

                    if (!confirm("Are you sure you want to remove this from your list?")) return;
                    console.log(payload);
                    fetch('/User/DeleteFromList', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(payload)
                    })
                    .then(response => {
                        if (response.ok) {
                            row.remove(); 
                        } else {
                            alert("Failed to delete item.");
                        }
                    })
                    .catch(error => {
                        console.error("Error deleting item:", error);
                        alert("An error occurred.");
                    });
                });
            });
        });
    </script>
</body>
</html>
